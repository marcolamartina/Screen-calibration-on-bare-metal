\ POINTS
30 CONSTANT INITIAL_VALUE
A0 CONSTANT FINAL_VALUE
8 CONSTANT POINT_OFFSET
FINAL_VALUE INITIAL_VALUE - 1+ POINT_OFFSET / 1+ CONSTANT NUM_POINT

\ PERCENTAGE
2710 NUM_POINT 3 * / CONSTANT INCREMENT
1EC CONSTANT X_RATE
190 CONSTANT Y_RATE
X_RATE 1E + CONSTANT X_%
2710 NUM_POINT 3 * INCREMENT * - CONSTANT INITIAL_RATE

\ BAR
384 CONSTANT BAR_WIDTH
10 CONSTANT BAR_HEIGHT
3E CONSTANT X_ORIGIN_BAR
1C0 CONSTANT Y_ORIGIN_BAR
BAR_WIDTH NUM_POINT 3 * / CONSTANT BAR_OFFSET

\ WINDOWS
CREATE X_INIT 40 , 240 , DOES> SWAP CELLS + @ ;
0 CONSTANT Y_INIT
180 CONSTANT WIDTH
180 CONSTANT HEIGHT

\ AXES
100 CONSTANT LENGHT_AXES
2F4 CONSTANT Y_ORIGIN
CREATE X_ORIGIN 40 , 180 , 2C0 , DOES> SWAP CELLS + @ ;

VARIABLE CURRENT
VARIABLE RATE

0 CONSTANT SX
1 CONSTANT DX


: COLOR_WINDOW ( COLOR SX/DX -- )
  WIDTH HEIGHT ROT X_INIT Y_INIT COLOR_RECTANGLE ;


: PRINT_ARROW_VERT ( COLOR ADDRESS -- )
  PD PL PD PL PD PL PD PL PD PR PR PT PT PR PD PD
  PR PR PR PR PR PT PL PL PL PT PR PR PL PT PL PT ! ;


: PRINT_ARROW_HORIZ ( COLOR ADDRESS -- )
  PL PT PL PT PL PT PL PT PL PD PD PR PR PD PL PL
  PD PD PD PD PD PR PT PT PT PR PD PD PT PR PT PR ! ;


: AXE_HORIZ ( COLOR ADDRESS -- )
  LENGHT_AXES SWAP LINE_HORIZ PRINT_ARROW_HORIZ ;


: AXE_VERT ( COLOR ADDRESS -- )
  LENGHT_AXES SWAP LINE_VERT PRINT_ARROW_VERT ;


: PRINT_AXES ( X Y -- )
  GET_ADDRESS WHITE SWAP 2DUP AXE_VERT AXE_HORIZ ;


: PRINT_BISECTOR ( X Y -- )
  GET_ADDRESS WHITE SWAP DUP LENGHT_AXES FFC * - WINDOW_DIAG_LIMIT !
  BEGIN
    PTR DUP WINDOW_DIAG_LIMIT @ <
  UNTIL 2DROP ;


: GRAPHS ( -- )
  R X_ORIGIN Y_ORIGIN 2DUP PRINT_AXES PRINT_BISECTOR
  G X_ORIGIN Y_ORIGIN 2DUP PRINT_AXES PRINT_BISECTOR
  B X_ORIGIN Y_ORIGIN 2DUP PRINT_AXES PRINT_BISECTOR ;


: CALCULATE_COLOR \ ( COMPONENT CHANNEL -- COLOR )
  DUP 0= IF DROP 10 LSHIFT ELSE
  DUP 1 = IF DROP 8 LSHIFT ELSE
  DROP THEN THEN ;

: SET_POINT \ ( COLOR ADDRESS -- )
  PTR PL PL PD PD PR PR PT ! ;


: CALCULATE_POINT \ ( RGB_COMPONENT CHANNEL -- )
  DUP >R X_ORIGIN Y_ORIGIN GET_ADDRESS                        \ ( S: RGB_COMPONENT ADDRESS ) ( R: CHANNEL )
  SWAP DUP R@ CALCULATE_COLOR SX COLOR_WINDOW 4 * +           \ ( S: ADDRESS_X ) ( R: CHANNEL )
  GET_RGB R@ RGB_COMPONENT @                                  \ ( S: ADDRESS_X COMPONENT ) ( R: CHANNEL )
  4 SPACES DUP . CR \ PRINT COMPONENT
  DUP R@ CALCULATE_COLOR DX COLOR_WINDOW \ COLOR RIGHT WINDOW
  1000 * - FF R> CALCULATE_COLOR SWAP SET_POINT ; \ SET POINT ON LUT

: PRINT_RATE ( -- )
  BLACK 1E F X_RATE Y_RATE COLOR_RECTANGLE \ CLEAR
  RATE @ /100 X_RATE Y_RATE PRINT \ PRINT DIGITS
  WHITE X_% Y_RATE GET_ADDRESS % 2DROP ; \ PRINT %

: PROGRESS_BAR \ ( -- )
  WHITE BAR_WIDTH X_ORIGIN_BAR Y_ORIGIN_BAR GET_ADDRESS DUP >R LINE_HORIZ
  BAR_HEIGHT SWAP LINE_VERT DROP
  BAR_HEIGHT R> LINE_VERT
  BAR_WIDTH SWAP LINE_HORIZ 2DROP ;

: RESET_BAR \ ( -- )
  X_ORIGIN_BAR 1+ CURRENT !
  INITIAL_RATE RATE !
  PRINT_RATE ;

: SET_BAR \ ( -- )
  WHITE BAR_OFFSET BAR_HEIGHT 2- CURRENT @ Y_ORIGIN_BAR BAR_HEIGHT - 1+ COLOR_RECTANGLE \ COLOR THE BAR
  CURRENT @ BAR_OFFSET + CURRENT ! \ UPDATE CURRENT
  INCREMENT RATE +!
  PRINT_RATE ;


: FILL_GRAPH \ ( CHANNEL -- )
  INITIAL_VALUE
  BEGIN
    2DUP DUP . \ PRINT CURRENT VALUE
    SWAP CALCULATE_POINT \ PRINT POINT
    SET_BAR
    POINT_OFFSET + \ UPDATE
    DUP FINAL_VALUE > \ CHECK
  UNTIL 2DROP ;


: RESET_SCREEN ( -- )
  BLACK COLOR_DISPLAY
  PROGRESS_BAR
  RESET_BAR
  GRAPHS ;

: START \ ( -- )
  RESET_SCREEN

  CR ." RED" CR
  R FILL_GRAPH

  CR ." GREEN" CR
  G FILL_GRAPH

  CR ." BLUE" CR
  B FILL_GRAPH

  BLACK SX COLOR_WINDOW
  BLACK DX COLOR_WINDOW ;
