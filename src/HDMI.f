
\ HDMI

3E8FA000 CONSTANT FRAMEBUFFER
FRAMEBUFFER 2FFFFF + CONSTANT FRAMEBUFFER_LIMIT

00FFFFFF CONSTANT WHITE
00FF0000 CONSTANT RED
0000FF00 CONSTANT GREEN
000000FF CONSTANT BLUE
00000000 CONSTANT BLACK

VARIABLE WINDOW_HORIZ_LIMIT
VARIABLE WINDOW_VERT_LIMIT
VARIABLE WINDOW_DIAG_LIMIT

VARIABLE NUM_DIGITS


\ CALCULATE THE ADDRESS FROM COORDINATES
: GET_ADDRESS ( X Y -- ADDRESS )
  400 * + 4 *
  FRAMEBUFFER + ;

\ COLOR THE POINT (X,Y)
: SET_PIXEL ( COLOR X Y -- )
  GET_ADDRESS ! ;



: PR ( COLOR ADDRESS -- COLOR ADDRESS_RIGHT )
  2DUP ! 4 + ;

: PL ( COLOR ADDRESS -- COLOR ADDRESS_LEFT )
  2DUP ! 4 - ;

: PD ( COLOR ADDRESS -- COLOR ADDRESS_DOWN )
  2DUP ! 1000 + ;

: PT ( COLOR ADDRESS -- COLOR ADDRESS_TOP )
  2DUP ! 1000 - ;

: PTR ( COLOR ADDRESS -- COLOR ADDRESS_TOP_RIGHT )
  2DUP ! FFC - ;

: TS ( COLOR ADDRESS -- COLOR ADDRESS_TOP )
  1000 - ;

: LS ( COLOR ADDRESS -- COLOR ADDRESS_LEFT )
  4 - ;

: RS ( COLOR ADDRESS -- COLOR ADDRESS_RIGHT )
  4 + ;

: DS ( COLOR ADDRESS -- COLOR ADDRESS_DOWN )
  1000 + ;



\ RETURN TRUE IF ADDRESS>FRAMEBUFFER_LIMIT
: ?LIMIT ( ADDRESS -- FLAG )
  DUP FRAMEBUFFER_LIMIT > ;


\ COLOR THE ENTIRE SCREEN
: COLOR_DISPLAY ( COLOR -- )
  FRAMEBUFFER
  BEGIN
    PR ?LIMIT
  UNTIL 2DROP ;


\ COLOR AN HORIZONTAL LINE
: LINE_HORIZ ( COLOR WIDTH ADDRESS -- COLOR ADDRESS)
  DUP ROT 1- 4 * + WINDOW_HORIZ_LIMIT !
  BEGIN
    PR DUP WINDOW_HORIZ_LIMIT @ >
  UNTIL ;

\ COLOR A VERTICAL LINE
: LINE_VERT ( COLOR HEIGHT ADDRESS -- COLOR ADDRESS)
  DUP ROT 1- 1000 * - WINDOW_VERT_LIMIT !
  BEGIN
    PT DUP WINDOW_VERT_LIMIT @ <
  UNTIL ;

: COLOR_RECTANGLE ( COLOR WIDTH HEIGHT X_INIT Y_INIT -- ) \ THE STARTING POINT IS THE TOP POINT ON THE LEFT
  GET_ADDRESS DUP ROT 1000 * + WINDOW_VERT_LIMIT ! SWAP >R \ SET THE VERTICAL LIMIT AND PUSH ONTO THE RETURN STACK THE WIDTH
  BEGIN
    2DUP R@ SWAP LINE_HORIZ 2DROP \ PRINT AN HORIZONTAL LINE
    DS DUP WINDOW_VERT_LIMIT @ > \ GO DOWN AND CHECK IF THE LIMIT IS EXCEEDED
  UNTIL 2DROP RDROP ;


: N1 \ ( COLOR ADDRESS -- COLOR ADDRESS_NEXT_CHAR)  \ THE STARTING POINT IS THE TOP POINT ON THE LEFT
    RS RS RS RS DS PR PD PD PD PD PD PD PD
    PD PD PD PD PD PD PR PR PR PT PL PL PL
    PL PL PL PL PD PR PR PR PT PT PT PT PT
    PT PT PT PT PT PT PT PL PD PL PD PL PT
    TS TS TS RS RS RS RS RS RS RS RS RS ;


: N2 \ ( COLOR ADDRESS -- COLOR ADDRESS_NEXT_CHAR)  \ THE STARTING POINT IS THE TOP POINT ON THE LEFT
  RS DS PD PR PR PR PR PR PR PD PL PD PR PD
  PL PL PD PL PD PL PD PL PD PL PD PD PD PD
  PD PR PR PR PR PR PR PR PT PL PL PL PL PL
  PL PT PT PT PT PR PT PR PT PR PT PR PT PR
  PT PR PT PT PL PT PL PL PL PL PL PT RS RS
  RS RS RS RS RS RS ;


: N3 \ ( COLOR ADDRESS -- COLOR ADDRESS_NEXT_CHAR)  \ THE STARTING POINT IS THE TOP POINT ON THE LEFT
  DS RS PD PR PT PR PD PR PT PR PD PR PT
  PR PR PD PL PD PR PL PD PL PD PL PD PL
  PD PL PD PD PR PR PR PR PD PD PD PD PL
  PL PL PL PL PL PD PR PR PR PR PR PR PR
  PT PT PT PT PT PT PL PL PL PL PR RS RS
  RS RS RS TS TS TS TS TS TS TS TS ;

: N4 \ ( COLOR ADDRESS -- COLOR ADDRESS_NEXT_CHAR)  \ THE STARTING POINT IS THE TOP POINT ON THE LEFT
  RS RS RS RS RS RS RS DS PD PD PD PD PD
  PD PD PD PD PR PD PL PD PD PD PL PT PT
  PT PT PT PT PT PT PT PT PT PT PT PL PD
  PD PL PD PR PD PL PL PD PR PL PD PD PD
  PD PR PR PD PL PL PL PL PT PR PT PL PR
  PT PT PT TS TS TS TS TS TS RS RS RS RS
  RS RS RS RS ;

: N5 \ ( COLOR ADDRESS -- COLOR ADDRESS_NEXT_CHAR)  \ THE STARTING POINT IS THE TOP POINT ON THE LEFT
  DS RS PD PD PD PD PD PD PR PR PR PR PR
  PD PR PD PD PD PD PL PD PL PL PL PL PL
  PD PR PR PR PR PR PR PT PR PT PT PT PT
  PT PT PL PT PL PL PL PL PL PT PT PT PT
  PT PR PD PR PT PR PD PR PT PR PD PR PT
  PT RS RS ;

: N6 \ ( COLOR ADDRESS -- COLOR ADDRESS_NEXT_CHAR)  \ THE STARTING POINT IS THE TOP POINT ON THE LEFT
  DS RS PD PD PD PD PD PD PD PD PD PD PD
  PD PD PR PT PT PT PT PT PR PR PR PR PR
  PD PD PD PD PL PL PL PL PD PR PR PR PR
  PR PT PT PT PT PT PT PL PL PL PL PL PL
  PT PT PT PT PT PT PR PR PR PR PR PR PT
  PL PL PL PL PL PL PT RS RS RS RS RS RS
  RS RS ;

: N7 \ ( COLOR ADDRESS -- COLOR ADDRESS_NEXT_CHAR)  \ THE STARTING POINT IS THE TOP POINT ON THE LEFT
  DS RS PD PR PT PR PD PR PT PR PD PR PT
  PR PD PD PD PL PD PL PD PL PD PL PD PD
  PD PD PD PD PD PR PT PT PT PT PT PT PT
  PR PT PR PT PR PT PR PT PT PT PT RS RS ;

: N8 \ ( COLOR ADDRESS -- COLOR ADDRESS_NEXT_CHAR)  \ THE STARTING POINT IS THE TOP POINT ON THE LEFT
  DS RS RS RS PD PL PD PL PD PD PR PT PR
  PT PD PD PD PL PR PD PD PD PL PD PL PD
  PD PR PT PR PT PD PD PD PL PR PD PR PT
  PR PD PR PT PR PT PL PT PR PR PD PT PT
  PL PL PT PR PL PT PL PL PT PR PR PT PT
  PT PT PR PD PD PD PT PR PT PT PL PT PL
  PL PL PT PR PR PT RS RS RS RS ;

: N9 \ ( COLOR ADDRESS -- COLOR ADDRESS_NEXT_CHAR)  \ THE STARTING POINT IS THE TOP POINT ON THE LEFT
  DS RS PD PD PD PD PD PD PR PR PR PR PR
  PR PD PD PD PD PD PD PL PL PL PL PL PL
  PD PR PR PR PR PR PR PR PT PT PT PT PT
  PT PT PT PL PL PL PL PL PL PT PT PT PT
  PT PR PD PR PR PR PR PD PD PD PR PT PT
  PT PT PL PL PL PL PT RS RS RS RS RS RS ;

: N0 \ ( COLOR ADDRESS -- COLOR ADDRESS_NEXT_CHAR)  \ THE STARTING POINT IS THE TOP POINT ON THE LEFT
  DS RS RS RS PD PL PD PR PD PL PL PD PR
  PD PL PD PR PD PL PD PR PD PL PD PR PR
  PD PL PD PR PD PR PT PT PR PD PD PR PT
  PR PT PL PT PR PR PT PL PT PR PT PL PT
  PR PT PL PT PR PT PL PL PT PR PT PL PL
  PD PL PT PT PR PR PT RS RS RS RS ;

: % \ ( COLOR ADDRESS -- COLOR ADDRESS_NEXT_CHAR)  \ THE STARTING POINT IS THE TOP POINT ON THE LEFT
  RS RS DS PD LS PD PD RS PR TS PT PT RS
  RS RS RS PD PD LS PD PD LS PD PD LS PD
  PD LS PD PD LS PD PD LS PD PR RS RS RS
  RS PT LS PT PT RS PR DS PD PR RS RS TS
  TS TS TS TS TS TS TS TS TS TS TS TS ;


CREATE DIGIT ' N0 , ' N1 , ' N2 , ' N3 , ' N4 , ' N5 , ' N6 , ' N7 , ' N8 , ' N9 , DOES> SWAP CELLS + @ EXECUTE ;

: SPLIT \ ( NUMBER -- DIGITS )
  0 NUM_DIGITS !
  BEGIN
    A /MOD NUM_DIGITS ++ DUP 0=
  UNTIL DROP ;

: PRINT \ ( NUMBER X Y -- )
  GET_ADDRESS >R SPLIT WHITE R>
  BEGIN
    ROT DIGIT NUM_DIGITS -- NUM_DIGITS @ 0=
  UNTIL 2DROP ;
